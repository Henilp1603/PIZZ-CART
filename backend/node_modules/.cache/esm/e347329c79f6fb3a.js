let express,mongoose,PORT,DB_URL,errorHandler,routes,path,cors;_79f‍.w("express",[["default",["express"],function(v){express=v}]]);_79f‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_79f‍.w("./config",[["PORT",["PORT"],function(v){PORT=v}],["DB_URL",["DB_URL"],function(v){DB_URL=v}]]);_79f‍.w("./middlewares/errorHandler",[["default",["errorHandler"],function(v){errorHandler=v}]]);_79f‍.w("./routes",[["default",["routes"],function(v){routes=v}]]);_79f‍.w("path",[["default",["path"],function(v){path=v}]]);_79f‍.w("cors",[["default",["cors"],function(v){cors=v}]]);







const app=express();

mongoose.connect(DB_URL,{useNewUrlParser:true, useUnifiedTopology:true});
const db=mongoose.connection;
db.on('error',_79f‍.g.console.error.bind(_79f‍.g.console,'connection error:'));
db.once('open',()=>{
    console.log('DB connected..');
});


global.appRoot = path.resolve(__dirname);
app.use(cors());    

app.use(express.urlencoded({extended:false}));
app.use(express.json());

app.use('/uploads',express.static('uploads'));
app.use('/api',routes)


app.use(errorHandler);
const port=process.env.PORT || PORT
app.listen(port,()=>{
    console.log(`server listening on ${port}`)
});