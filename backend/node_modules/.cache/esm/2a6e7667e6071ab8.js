let express,registerController,loginController,userController,refreshController,productController,auth,admin;_e60‍.x([["default",()=>_e60‍.o]]);_e60‍.w("express",[["default",["express"],function(v){express=v}]]);_e60‍.w("../controllers",[["registerController",["registerController"],function(v){registerController=v}],["loginController",["loginController"],function(v){loginController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);_e60‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_e60‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);



const router=express.Router();


router.post('/register',registerController.register)
router.post('/login',loginController.login)
router.get('/me',auth,userController.me)
router.post('/refresh',refreshController.refresh)
router.post('/logout',auth,loginController.logout);

router.post('/products/cart-items', productController.getProducts);

router.post('/products',[auth,admin],productController.store);
router.put('/products/:id',[auth,admin],productController.update);
router.delete('/products/:id',[auth,admin],productController.destroy);
router.get('/products',productController.index);
router.get('/products/:id',productController.show);














_e60‍.d(router);